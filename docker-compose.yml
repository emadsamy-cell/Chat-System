version: "3.8"
services:
  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: "12345678"
      MYSQL_DATABASE: chat-system
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-p12345678",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s http://localhost:9200/_cluster/health | grep -q 'status.*green\\|status.*yellow'",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  rails_app:
    build:
      context: ./rails_app
      dockerfile: Dockerfile
    command: bash -c "bundle exec rails db:migrate && bundle exec rails server -b 0.0.0.0"
    ports:
      - "3000:3000"
    volumes:
      - ./rails_app:/app
      - rails_bundle:/usr/local/bundle
    environment:
      RAILS_ENV: development
      DATABASE_URL: mysql2://root:12345678@db:3306/chat-system
      REDIS_URL: redis://redis:6379/0
      ELASTICSEARCH_URL: http://elasticsearch:9200
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy

  go_app:
    build:
      context: ./go_app
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      DB_HOST: db
      DB_PORT: 3306
      DB_USER: root
      DB_PASSWORD: 12345678
      DB_NAME: chat-system
      REDIS_HOST: redis
      REDIS_PORT: 6379
      ELASTICSEARCH_URL: http://elasticsearch:9200
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy

volumes:
  db_data:
  rails_bundle:
